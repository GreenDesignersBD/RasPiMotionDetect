[LOGIN]
email    = user.name@gmail.com      ; google email
username = user.name                ; google username. Typically the bit before @gmail.com
password = password                 ; Password. If using 2FA, create an app specific password
album_name = RasPiMotionDetect      ; Picasa album Name. It will be created if it does not exist

[CONFIG]
scratchImageWidth = 100     ; The smaller this is the quicker we can  check pixels & lower the memory use
scratchImageHeight = 75     ; too small and we lose too much quality. THe defaults seem to work fine
upload_scratch_pics = no    ; do we also upload the 100x75 pic taken for the motion detect?
hrs_to_loop = 8             ; this is approximate
picture_threshold = 15      ; how much the pixel has changed by before it's marked as different
picture_sensitivity = 50    ; how many pixels have changed before we decide to upload
forceCapture = True         ; Force an intervelometer mode?
forceCaptureTime = 3600     ; How often (in seconds) do we force an image capture?

[PICTURE]
name_prefix = Motion Detected   ; Prefix for the filenames uploaded to Picasa
camera_rotation = 0             ; degrees to rotate the photo by 

# any other options you might want to pass to raspistill
# https://github.com/raspberrypi/userland/tree/master/host_applications/linux/apps/raspicam#camera-control-options
# Note the -t 0 allows the RPi to tke a picture immediately, but this impacts quality. 5s is the default
# technically rotation should be here, but I found it useful enough to split it into an option by itself above.
cam_options = -t 5 -q 65



[selectivescan]
# Scratch-Image settings
# comments copied verbatim from
# http://www.raspberrypi.org/phpBB3/viewtopic.php?p=391583#p391583
# you might want to comment directly in that thread as I just implemented 
# Kesthal logic to the uploader (but changed to read values from config file)

# areaX1 = start pixel on left side,end pixel on right side
# areaX2 = start pixel on top side,stop pixel on bottom side
# these pixels are NOT zero-based, the first pixel is 1 and the last pixel is scratchImageWidth or scratchImageHeight

areaX1 = 1, 100
areaY1 = 1, 75


# you can define areas, where the script should scan for changed pixel
# for example, if your picture looks like this:
#
#     ....XXXX
#     ........
#     ........
#
# "." is a street or a house, "X" are trees which move arround like crazy when the wind is blowing
# because of the wind in the trees, there will be taken photos all the time. to prevent this, your setting might look like this:
# areaX1 = 1, 50
# areaY1 = 1, 75
# areaX2 = 51, 100
# areaY2 = 26, 75   ; area y=1 to 25 not scanned in x=51 to 100
# Note that the areaX# & areaY# need to be consecutive. The code does not care what you call it, just that it is sequential:)
# Naming it areaX# & Y# is purely so it is more human redable

# even more complex example
# areaX1 = 1, 39
# areaY1 = 1, 75
# areaX2 = 40, 67
# areaY2 = 43, 75
# areaX3 = 68, 85
# areaY3 = 48, 75
# areaX4 = 86, 100
# areaY4 = 41, 75

# in debug mode, a file debug.bmp is written to disk with marked changed pixel an with marked border of scan-area
# debug mode should only be turned on while testing the parameters above
scratchDebugMode = False

